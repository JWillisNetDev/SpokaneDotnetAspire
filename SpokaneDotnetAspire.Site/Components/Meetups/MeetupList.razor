@inject IMeetupService Meetup
@rendermode InteractiveServer

@if (_Meetups is not null)
{
    @foreach (var meetup in _Meetups)
    {
        <MeetupItem
			@key="@(meetup.Id)"
            Meetup="@meetup"
            OnDelete="DeleteMeetup" />
    }
}
else
{
    <MudContainer Class="d-flex justify-center">
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    </MudContainer>
}


@code
{
    private int _Page = 0;
    private int _PageSize = 10;
	private List<Meetup>? _Meetups = null;

	protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _Meetups = await GetMeetupsAsync();
		StateHasChanged();
    }

    private async Task DeleteMeetup(Meetup meetup)
    {
        await Meetup.DeleteMeetupAsync(meetup);
        _Meetups = await GetMeetupsAsync();
        StateHasChanged();
    }

    private async Task<List<Meetup>> GetMeetupsAsync()
    {
	    return await Meetup.GetMeetupsAsync(_Page, _PageSize);
    }
}
